<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trkj.crmproject.dao.GonggaoDao">
  <resultMap id="BaseResultMap" type="com.trkj.crmproject.entity.Gonggao">
    <id column="gg_id" jdbcType="INTEGER" property="gg_id" />
    <result column="gg_type" jdbcType="VARCHAR" property="gg_type" />
    <result column="gg_title" jdbcType="VARCHAR" property="gg_title" />
    <result column="end_time" jdbcType="TIMESTAMP" property="end_time" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="read_number" jdbcType="INTEGER" property="read_number" />
    <result column="create_user" jdbcType="INTEGER" property="create_user" />
  </resultMap>
  <sql id="Base_Column_List">
    gonggao.gg_id as gonggao_gg_id, gonggao.gg_type as gonggao_gg_type, gonggao.gg_title as gonggao_gg_title,
    gonggao.end_time as gonggao_end_time, gonggao.content as gonggao_content, gonggao.`state` as `gonggao_state`,
    gonggao.create_time as gonggao_create_time, gonggao.read_number as gonggao_read_number,
    gonggao.create_user as gonggao_create_user
  </sql>

  <select id="selectAllGg" resultMap="BaseResultMap">
    select * from gonggao
    order by create_time desc
  </select>

  <select id="selectById" resultMap="BaseResultMap">
    select * from gonggao
    where gg_id=#{id}
  </select>

  <select id="selectGgByTypeAndState" resultMap="BaseResultMap">
    select gr.state state,g.gg_title gg_title,g.create_time create_time,g.gg_type,g.gg_id from gonggao g
    left join gg_read gr on gr.gonggao_id=g.gg_id
    left join staff s on s.staff_id=gr.staff_id
    left join users u on u.user_id=s.user_id
    <where>
      <if test="user_id !=0 ">
        u.user_id=#{user_id}
      </if>
      <if test="type!=null || type == ''">
        and gg_type=#{type}
      </if>
    </where>
    GROUP BY g.gg_title
  </select>

  <select id="selectReadWd" resultMap="BaseResultMap">
    select gr.state state,g.gg_title gg_title,g.create_time create_time,g.gg_type,g.gg_id
    from gonggao g
    left join gg_read gr on gr.gonggao_id=g.gg_id
    where gg_id not in (${ids}) and gg_type=#{type}
    GROUP BY g.gg_title
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from gonggao gonggao
    where gonggao.gg_id = #{gg_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from gonggao
    where gg_id = #{gg_id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="gg_id" keyProperty="gg_id" parameterType="com.trkj.crmproject.entity.Gonggao" useGeneratedKeys="true">
    insert into gonggao (gg_type, gg_title, end_time,
      content, `state`, create_time,
      read_number, create_user)
    values (#{gg_type,jdbcType=VARCHAR}, #{gg_title,jdbcType=VARCHAR}, #{end_time,jdbcType=TIMESTAMP},
      #{content,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP},
      #{read_number,jdbcType=INTEGER}, #{create_user,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="gg_id" keyProperty="gg_id" parameterType="com.trkj.crmproject.entity.Gonggao" useGeneratedKeys="true">
    insert into gonggao
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gg_type != null">
        gg_type,
      </if>
      <if test="gg_title != null">
        gg_title,
      </if>
      <if test="end_time != null">
        end_time,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="read_number != null">
        read_number,
      </if>
      <if test="create_user != null">
        create_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gg_type != null">
        #{gg_type,jdbcType=VARCHAR},
      </if>
      <if test="gg_title != null">
        #{gg_title,jdbcType=VARCHAR},
      </if>
      <if test="end_time != null">
        #{end_time,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="read_number != null">
        #{read_number,jdbcType=INTEGER},
      </if>
      <if test="create_user != null">
        #{create_user,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.trkj.crmproject.entity.Gonggao">
    update gonggao
    <set>
      <if test="gg_type != null">
        gg_type = #{gg_type,jdbcType=VARCHAR},
      </if>
      <if test="gg_title != null">
        gg_title = #{gg_title,jdbcType=VARCHAR},
      </if>
      <if test="end_time != null">
        end_time = #{end_time,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="read_number != null">
        read_number = #{read_number,jdbcType=INTEGER},
      </if>
      <if test="create_user != null">
        create_user = #{create_user,jdbcType=INTEGER},
      </if>
    </set>
    where gg_id = #{gg_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.trkj.crmproject.entity.Gonggao">
    update gonggao
    set gg_type = #{gg_type,jdbcType=VARCHAR},
      gg_title = #{gg_title,jdbcType=VARCHAR},
      end_time = #{end_time,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      read_number = #{read_number,jdbcType=INTEGER},
      create_user = #{create_user,jdbcType=INTEGER}
    where gg_id = #{gg_id,jdbcType=INTEGER}
  </update>
</mapper>
