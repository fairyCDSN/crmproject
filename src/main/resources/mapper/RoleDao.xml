<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trkj.crmproject.dao.RoleDao">
  <resultMap id="BaseResultMap" type="com.trkj.crmproject.entity.Role">
    <id column="role_id" jdbcType="INTEGER" property="role_id" />
    <result column="role_name" jdbcType="VARCHAR" property="role_name" />
    <result column="role_desc" jdbcType="VARCHAR" property="role_desc" />
    <result column="role_sort" jdbcType="INTEGER" property="role_sort" />
    <result column="is_use" jdbcType="INTEGER" property="is_use" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
  </resultMap>
  <sql id="Base_Column_List">
    role.role_id as role_role_id, role.role_name as role_role_name, role.role_desc as role_role_desc,
    role.role_sort as role_role_sort, role.is_use as role_is_use, role.create_time as role_create_time
  </sql>

<!--  根据用户名称查询角色信息-->
  <select id="selectRoleByUserName" resultType="java.lang.String" parameterType="string">
    SELECT r.role_name  FROM role r
    LEFT JOIN user_role ur ON r.role_id = ur.role_id
    LEFT JOIN users u ON u.user_id = ur.users_id
    WHERE u.user_name = #{username}
  </select>

  <!--  根据用户名称查询角色信息-->
  <select id="selectRoleIdByUserName" resultType="java.lang.Integer">
    SELECT r.role_id FROM role r
    LEFT JOIN user_role ur ON r.role_id = ur.role_id
    LEFT JOIN users u ON u.user_id = ur.users_id
    WHERE u.user_name = #{username}
  </select>

  <select id="selectRoleName" resultType="java.lang.String">
    SELECT role_name FROM role where role_id = #{roleId}
  </select>




  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from role role
    where role.role_id = #{role_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where role_id = #{role_id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="role_id" keyProperty="role_id" parameterType="com.trkj.crmproject.entity.Role" useGeneratedKeys="true">
    insert into role (role_name, role_desc, role_sort,
      is_use, create_time)
    values (#{role_name,jdbcType=VARCHAR}, #{role_desc,jdbcType=VARCHAR}, #{role_sort,jdbcType=INTEGER},
      #{is_use,jdbcType=INTEGER}, #{create_time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="role_id" keyProperty="role_id" parameterType="com.trkj.crmproject.entity.Role" useGeneratedKeys="true">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="role_name != null">
        role_name,
      </if>
      <if test="role_desc != null">
        role_desc,
      </if>
      <if test="role_sort != null">
        role_sort,
      </if>
      <if test="is_use != null">
        is_use,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="role_name != null">
        #{role_name,jdbcType=VARCHAR},
      </if>
      <if test="role_desc != null">
        #{role_desc,jdbcType=VARCHAR},
      </if>
      <if test="role_sort != null">
        #{role_sort,jdbcType=INTEGER},
      </if>
      <if test="is_use != null">
        #{is_use,jdbcType=INTEGER},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.trkj.crmproject.entity.Role">
    update role
    <set>
      <if test="role_name != null">
        role_name = #{role_name,jdbcType=VARCHAR},
      </if>
      <if test="role_desc != null">
        role_desc = #{role_desc,jdbcType=VARCHAR},
      </if>
      <if test="role_sort != null">
        role_sort = #{role_sort,jdbcType=INTEGER},
      </if>
      <if test="is_use != null">
        is_use = #{is_use,jdbcType=INTEGER},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where role_id = #{role_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.trkj.crmproject.entity.Role">
    update role
    set role_name = #{role_name,jdbcType=VARCHAR},
      role_desc = #{role_desc,jdbcType=VARCHAR},
      role_sort = #{role_sort,jdbcType=INTEGER},
      is_use = #{is_use,jdbcType=INTEGER},
      create_time = #{create_time,jdbcType=TIMESTAMP}
    where role_id = #{role_id,jdbcType=INTEGER}
  </update>
<!--  修改状态-->
  <update id="updateState">
    update role
    set is_use = #{state}
    where role_id = #{id}
  </update>

  <select id="selectrolename" resultType="com.trkj.crmproject.vo.RoleVo">
    select a.app_id,a.role_id,r.role_name,f.staff_name,f.user_id from app_role a left join role r on a.role_id=r.role_id
    left join user_role u on r.role_id=u.users_id
    left join users s on u.users_id=s.user_id
    left join staff f on s.user_id=f.user_id
    where a.app_id=1
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select * from role
  </select>
</mapper>
