<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trkj.crmproject.dao.CustomerDao">
    <resultMap id="CustomerMap" type="com.trkj.crmproject.entity.customer">
        <id column="customer_id" property="customer_id" jdbcType="INTEGER"/>
        <result column="salesperson_id" property="salesperson_id" jdbcType="INTEGER"/>
        <result column="address_id" property="address_id" jdbcType="INTEGER"/>
        <result column="customer_name" property="customer_name" jdbcType="VARCHAR"/>
        <result column="customer_type" property="customer_type" jdbcType="VARCHAR"/>
        <result column="customer_source" property="customer_source" jdbcType="VARCHAR"/>
        <result column="customer_stage" property="customer_stage" jdbcType="VARCHAR"/>
        <result column="remarks" property="remarks" jdbcType="VARCHAR"/>
        <result column="create_time" property="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="customerCol">
        customer_id,salesperson_id,address_id,customer_name,customer_type,customer_source,customer_stage,remarks,create_time
    </sql>
    <select id="findCustomer" resultMap="CustomerMap">
        select  <include refid="customerCol"/>
        from customer where salesperson_id = #{salesperson_id} and customer_type != '过期客户'
        <if test="customer_stage != null and customer_stage != ''">
            and customer_stage like '%${customer_stage}%'
        </if>
        <if test="customer_name != null and customer_name != ''">
            and customer_name like '%${customer_name}%'
        </if>
        <if test="create_time1 != null and create_time1 != ''">
            and date(create_time) between #{create_time1} and #{create_time2}
        </if>
    </select>
    <select id="findCustomer1" resultMap="CustomerMap">
        select  <include refid="customerCol"/>
        from customer where salesperson_id is null or customer_type = '过期客户'
        <if test="customer_stage != null and customer_stage != ''">
            and customer_stage like '%${customer_stage}%'
        </if>
        <if test="customer_name != null and customer_name != ''">
            and customer_name like '%${customer_name}%'
        </if>
        <if test="create_time1 != null and create_time1 != ''">
            and date(create_time) between #{create_time1} and #{create_time2}
        </if>
    </select>
    <select id="findCustomer2" resultMap="CustomerMap">
        select  <include refid="customerCol"/>
        from customer where (salesperson_id = #{salesperson_id} or salesperson_id is null) and customer_type = '过期客户'
        <if test="customer_stage != null and customer_stage != ''">
            and customer_stage like '%${customer_stage}%'
        </if>
        <if test="customer_name != null and customer_name != ''">
            and customer_name like '%${customer_name}%'
        </if>
        <if test="create_time1 != null and create_time1 != ''">
            and date(create_time) between #{create_time1} and #{create_time2}
        </if>
    </select>
    <select id="findCustomers" resultMap="CustomerMap">
        select  <include refid="customerCol"/>
        from customer where salesperson_id = #{salesperson_id} and customer_type != '过期客户'

        select  <include refid="customerCol"/>
        from customer where salesperson_id = #{salesperson_id} and customer_type != '过期客户'
    </select>
    <select id="findCustomers2" resultMap="CustomerMap">
        select  <include refid="customerCol"/>
        from customer where salesperson_id is null or customer_type = '过期客户'
    </select>
    <select id="findCusXq" resultType="com.trkj.crmproject.vo.CusXqVo">
        select customer.customer_id,customer.customer_name,customer.customer_type,customer.customer_source,customer.customer_stage,
        customer.remarks,customer.create_time,address.country,address.province,address.city,address.email,address.phone,address.fax
        from customer,address where customer.customer_id = #{customer_id} and address.address_id = customer.address_id
    </select>
    <select id="findCustomerById" resultType="java.lang.Integer">
        select  max(customer_id) from customer
    </select>
    <select id="checkdeCus1" resultType="java.lang.Integer">
        select bjid from baojia where state !='执行完成' and customer_id=#{customer_id}
    </select>
    <select id="checkdeCus2" resultType="java.lang.Integer">
        select ordertable.order_id from ordertable,baojia where ordertable.state !='合同结束' and baojia.customer_id=#{customer_id}
        and baojia.bjid=ordertable.bjid
    </select>
    <insert id="addCustomer" >
        insert into customer(salesperson_id,address_id, customer_name,customer_type,customer_source,customer_stage,remarks)
        values (#{salesperson_id},#{address_id}, #{customer_name},#{customer_type},#{customer_source},'第一阶段',#{remarks})
    </insert>
    <insert id="addConCus">
        insert into cont_cust(contact_id,customer_id)
        values (#{contact_id},#{customer_id})
    </insert>
    <insert id="addfollow">
        insert into follow(follow_title,customer_id,contact,follow_date,founder,follow_manner,follow_content)
        values (#{follow_title},(select max(customer_id) from customer),#{contact_name},now(),#{user_name},#{follow_manner},#{follow_content})
    </insert>
    <insert id="insertfollow">
        insert into follow(follow_title,customer_id,contact,follow_date,founder,follow_manner,follow_content)
        values (#{follow_title},#{customer_id},#{contact_name},now(),#{user_name},#{follow_manner},#{follow_content})
    </insert>
    <update id="updateCustomer">
        update customer
        <set>
            <if test="customer_name != null">
                customer_name = #{customer_name},
            </if>
            <if test="customer_stage != null">
                customer_stage = #{customer_stage},
            </if>
            <if test="customer_type != null">
                customer_type = #{customer_type},
            </if>
        </set>
        where customer_id = #{customer_id}
    </update>
    <update id="updataCustomerType1">
        update customer
        <set>
            customer_type = '过期客户'
        </set>
        where customer_id = #{customer_id}
    </update>
    <update id="updataCustomerType2">
        update customer
        <set>
            customer_type = '正式客户'
        </set>
        where customer_id = #{customer_id}
    </update>
    <update id="updateSeId">
        update customer set
        <if test="staff_id == 0">
            salesperson_id = null
        </if>
        <if test="staff_id != 0">
            salesperson_id = #{staff_id}
        </if>
         where customer_id = #{customer_id}
    </update>

</mapper>
