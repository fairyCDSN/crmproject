<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trkj.crmproject.dao.TzDao">
  <resultMap id="BaseResultMap" type="com.trkj.crmproject.entity.Tz">
    <id column="tz_id" jdbcType="INTEGER" property="tz_id" />
    <result column="tz_title" jdbcType="VARCHAR" property="tz_title" />
    <result column="tz_content" jdbcType="VARCHAR" property="tz_content" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="end_time" jdbcType="TIMESTAMP" property="end_time" />
    <result column="user_id" jdbcType="INTEGER" property="user_id" />
    <result column="tz_type" jdbcType="VARCHAR" property="tz_type"/>
    <result column="state" jdbcType="VARCHAR" property="state"/>
    <result column="staff_name" jdbcType="VARCHAR" property="staff_name"/>
  </resultMap>
  <sql id="Base_Column_List">
    tz.tz_id as tz_tz_id, tz.tz_title as tz_tz_title, tz.tz_content as tz_tz_content,
    tz.create_time as tz_create_time, tz.end_time as tz_end_time, tz.user_id as tz_user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tz tz
    where tz.tz_id = #{tz_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tz
    where tz_id = #{tz_id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="tz_id" keyProperty="tz_id" parameterType="com.trkj.crmproject.entity.Tz" useGeneratedKeys="true">
    insert into tz (tz_title, tz_content, create_time,
      end_time, user_id,tz_type)
    values (#{tz_title,jdbcType=VARCHAR}, #{tz_content,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP},
      #{end_time,jdbcType=TIMESTAMP}, #{user_id,jdbcType=INTEGER},#{tz_type,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="tz_id" keyProperty="tz_id" parameterType="com.trkj.crmproject.entity.Tz" useGeneratedKeys="true">
    insert into tz
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tz_title != null">
        tz_title,
      </if>
      <if test="tz_content != null">
        tz_content,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="end_time != null">
        end_time,
      </if>
      <if test="user_id != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tz_title != null">
        #{tz_title,jdbcType=VARCHAR},
      </if>
      <if test="tz_content != null">
        #{tz_content,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="end_time != null">
        #{end_time,jdbcType=TIMESTAMP},
      </if>
      <if test="user_id != null">
        #{user_id,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.trkj.crmproject.entity.Tz">
    update tz
    <set>
      <if test="tz_title != null">
        tz_title = #{tz_title,jdbcType=VARCHAR},
      </if>
      <if test="tz_content != null">
        tz_content = #{tz_content,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="end_time != null">
        end_time = #{end_time,jdbcType=TIMESTAMP},
      </if>
      <if test="user_id != null">
        user_id = #{user_id,jdbcType=INTEGER},
      </if>
    </set>
    where tz_id = #{tz_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.trkj.crmproject.entity.Tz">
    update tz
    set tz_title = #{tz_title,jdbcType=VARCHAR},
      tz_content = #{tz_content,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      end_time = #{end_time,jdbcType=TIMESTAMP},
      user_id = #{user_id,jdbcType=INTEGER}
    where tz_id = #{tz_id,jdbcType=INTEGER}
  </update>


  <select id="selectTz" resultMap="BaseResultMap">
    select t.*,tu.state state from tz_user tu
    left join tz t on t.tz_id=tu.tz_id
    left join users u on u.user_id=tu.user_id
    where u.user_name=#{name}
    ORDER BY tu.state desc
  </select>

  <select id="selectTzById" resultMap="BaseResultMap">
    select t.*,tu.state state,s.staff_name from tz_user tu
    left join tz t on t.tz_id=tu.tz_id
    left join users u on u.user_id=tu.user_id
    left join staff s on s.user_id=u.user_id
    where u.user_name=#{name} and t.tz_id=#{id}
  </select>
</mapper>
